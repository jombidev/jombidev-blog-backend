name: GitHub CI / CD with Gradle

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout to develop
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
          file: Dockerfile
          context: .

  publish:
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Add to Docker
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker stop $(docker ps -aq -f 'ancestor=${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}')
            docker rm $(docker ps -aq -f 'ancestor=${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}')

            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
            
            
            mkdir -p blog-backend
            cd blog-backend
            
            touch ./production.env
            echo '${{ secrets.ENVIRONMENT }}' | base64 --decode > ./production.env
            
            mkdir -p ./env
            touch ./env/oracle.key.pem
            echo '${{ secrets.ORACLE_KEY }}' | base64 --decode > ./env/oracle.key.pem
            
            docker run -v ./env:/env/ --env-file production.env -d -p 8080:8080 --name blog-backend ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}
            
            rm ./production.env
